version: 2.1

orbs:
  ruby: circleci/ruby@1.1.2

executors:
  default_executor:
    working_directory: ~/circleci-demo-ruby-rails
    docker:
      - image: circleci/ruby:3.0.0-node-browsers
        environment:
          DB_HOST: 127.0.0.1
          RAILS_ENV: test
          BUNDLER_VERSION: 2.2.3
          TZ: "Japan"
      - image: circleci/mysql:8.0.19-ram
        command: [--default-authentication-plugin=mysql_native_password]
        environment:
          MYSQL_USER: root
          MYSQL_DB: circle_test

commands:
  check_versions:
    steps:
      - run: bundle -v
      - run: node -v
      - run: yarn -v

  setup_bundler:
    steps:
      - run:
          name: Setup bundler
          command: |
            sudo gem update --system
            sudo gem uninstall bundler
            sudo rm /usr/local/bin/bundle
            sudo gem install bundler

  setup_gems:
    steps:
      - restore_cache:
          keys:
            - gems-{{ checksum ".circleci/.cache_version" }}-{{ checksum ".ruby-version" }}-{{ checksum "Gemfile.lock" }}
            - gems-{{ checksum ".circleci/.cache_version" }}-{{ checksum ".ruby-version" }}-
            - gems-{{ checksum ".circleci/.cache_version" }}-
      - run:
          name: bundle install
          command: |
            bundle check || bundle install --jobs=4 --retry=3 --path vendor/bundle
      - save_cache:
          key: gems-{{ checksum ".circleci/.cache_version" }}-{{ checksum ".ruby-version" }}-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

  setup_database:
    steps:
      - run:
          name: Wait for database
          command: dockerize -wait tcp://127.0.0.1:3306 -timeout 3m
      - run:
          name: Prepare database.yml
          command: |
            cp -v config/database.ci.yml config/database.yml
      - run: mysql_config --socket
      - run: bundle exec rails db:create
      - run: bundle exec rails db:schema:load

  setup_yarn:
    steps:
      - restore_cache:
          keys:
            - yarn-{{ checksum ".circleci/.cache_version" }}-{{ checksum "yarn.lock" }}
            - yarn-{{ checksum ".circleci/.cache_version" }}-
      - run: yarn install
      - save_cache:
          key: yarn-{{ checksum ".circleci/.cache_version" }}-{{ checksum "yarn.lock" }}
          paths:
            - vendor/bundle

  # Build JavaScript files （eslintも実行する）
  build_webpack:
    steps:
      - run: bundle exec bin/webpack

  run_lint:
    steps:
      - run: bundle exec rails factory_bot:lint RAILS_ENV=test
      - run: bundle exec rubocop
      - run: bundle exec brakeman
      - run: yarn run lint

  run_tests:
    steps:
      - run:
          name: Run eager_load test
          command: bundle exec rails runner Rails.application.eager_load!
      - run:
          name: Run rspec
          command: |
            bundle exec rspec --profile 10 \
                              --format RspecJunitFormatter \
                              --out test_results/rspec.xml \
                              --format progress \
                              $(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)

jobs:
  setup:
    executor: default_executor
    steps:
      - checkout
      - setup_bundler
      - setup_yarn
      - check_versions

  lint:
    executor: default_executor
    steps:
      - checkout
      - setup_bundler
      - setup_gems
      - setup_database
      - setup_yarn
      - run_lint

  test:
    executor: default_executor
    environment:
      RAILS_ENV: test
    steps:
      - checkout
      - setup_bundler
      - setup_gems
      - setup_database
      - setup_yarn
      - build_webpack
      - run_tests

workflows:
  version: 2

  commit:
    jobs:
      - setup
      - lint:
          requires:
            - setup
      - test:
          requires:
            - setup
